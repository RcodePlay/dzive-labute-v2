{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = \"http://localhost:3000\";\n    this.authToken = null;\n  }\n  login(loginData) {\n    const url = `${this.apiUrl}/api/login`;\n    // Send the login request to the backend API\n    return this.http.post(url, loginData);\n  }\n  setAuthToken(token) {\n    localStorage.setItem('token', token);\n    this.authToken = token;\n  }\n  getAuthToken() {\n    return localStorage.getItem('token');\n  }\n  // Modified method to include JWT in the Authorization header\n  getHeaders() {\n    const token = this.getAuthToken();\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n  }\n  isAuthenticatedUser() {\n    return this.authToken !== null;\n  }\n  // Modified method to include headers in the request\n  getProtectedData() {\n    const url = `${this.apiUrl}/api/protected-data`;\n    const headers = this.getHeaders();\n    return this.http.get(url, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","ApiService","constructor","http","apiUrl","authToken","login","loginData","url","post","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","getHeaders","isAuthenticatedUser","getProtectedData","headers","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Radoslav\\Desktop\\projects\\dzive-labute-v2\\dzive-labute-web\\ngApp\\src\\app\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private apiUrl = \"http://localhost:3000\"\n\n  constructor(private http: HttpClient) { }\n\n  login(loginData: any): Observable<any> {\n    const url = `${this.apiUrl}/api/login`\n    // Send the login request to the backend API\n    return this.http.post<any>(url, loginData);\n\n  }\n\n  private authToken: string | null = null\n  setAuthToken(token: string): void {\n    localStorage.setItem('token', token)\n    this.authToken = token\n  }\n\n  getAuthToken(): string | null {\n    return localStorage.getItem('token');\n  }\n\n  // Modified method to include JWT in the Authorization header\n  private getHeaders(): HttpHeaders {\n    const token = this.getAuthToken();\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    });\n  }\n\n  isAuthenticatedUser(): boolean {\n    return this.authToken !== null\n  }\n\n    // Modified method to include headers in the request\n    getProtectedData(): Observable<any> {\n      const url = `${this.apiUrl}/api/protected-data`;\n      const headers = this.getHeaders();\n  \n      return this.http.get(url, { headers });\n    }\n}\n\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,UAAU;EAIrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB;IAWhC,KAAAC,SAAS,GAAkB,IAAI;EATC;EAExCC,KAAKA,CAACC,SAAc;IAClB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,MAAM,YAAY;IACtC;IACA,OAAO,IAAI,CAACD,IAAI,CAACM,IAAI,CAAMD,GAAG,EAAED,SAAS,CAAC;EAE5C;EAGAG,YAAYA,CAACC,KAAa;IACxBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpC,IAAI,CAACN,SAAS,GAAGM,KAAK;EACxB;EAEAG,YAAYA,CAAA;IACV,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;EAEA;EACQC,UAAUA,CAAA;IAChB,MAAML,KAAK,GAAG,IAAI,CAACG,YAAY,EAAE;IACjC,OAAO,IAAId,WAAW,CAAC;MACrB,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUW,KAAK;KACjC,CAAC;EACJ;EAEAM,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACZ,SAAS,KAAK,IAAI;EAChC;EAEE;EACAa,gBAAgBA,CAAA;IACd,MAAMV,GAAG,GAAG,GAAG,IAAI,CAACJ,MAAM,qBAAqB;IAC/C,MAAMe,OAAO,GAAG,IAAI,CAACH,UAAU,EAAE;IAEjC,OAAO,IAAI,CAACb,IAAI,CAACiB,GAAG,CAACZ,GAAG,EAAE;MAAEW;IAAO,CAAE,CAAC;EACxC;EAAC,QAAAE,CAAA,G;qBA1CQpB,UAAU,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVzB,UAAU;IAAA0B,OAAA,EAAV1B,UAAU,CAAA2B,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}