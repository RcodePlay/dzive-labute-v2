{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { catchError, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiService } from './api.service';\nexport const AuthGuard = (route, state) => {\n  const loginService = inject(ApiService);\n  const router = inject(Router);\n  return loginService.isLoggedIn().pipe(map(loggedIn => loggedIn ? true : router.createUrlTree([router.parseUrl(Constants.LOGIN_ROUTE)], {\n    queryParams: {\n      loggedOut: true,\n      origUrl: state.url\n    }\n  })), catchError(err => {\n    router.navigate([Constants.LOGIN_ROUTE], {\n      queryParams: {\n        loggedOut: true,\n        origUrl: state.url\n      }\n    });\n    return of(false);\n  }));\n};","map":{"version":3,"names":["inject","Router","catchError","of","map","ApiService","AuthGuard","route","state","loginService","router","isLoggedIn","pipe","loggedIn","createUrlTree","parseUrl","Constants","LOGIN_ROUTE","queryParams","loggedOut","origUrl","url","err","navigate"],"sources":["C:\\Users\\Radoslav\\Desktop\\projects\\dzive-labute-v2\\dzive-labute-web\\ngApp\\src\\app\\auth.guard.ts"],"sourcesContent":["import {inject} from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n  CanActivateFn, ActivatedRoute, mapToCanActivate\n} from '@angular/router';\nimport {catchError, of} from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiService } from './api.service';\n\nexport const AuthGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n  const loginService = inject(ApiService);\n  const router = inject(Router);\n\n  return loginService.isLoggedIn().pipe(\n    map(loggedIn => loggedIn ? true : router.createUrlTree([router.parseUrl(Constants.LOGIN_ROUTE)], {\n      queryParams: { loggedOut: true, origUrl: state.url }\n    } )),\n    catchError((err) => {\n      router.navigate([Constants.LOGIN_ROUTE], {\n        queryParams: { loggedOut: true, origUrl: state.url }\n      });\n      return of(false);\n    })\n  )\n}"],"mappings":"AAAA,SAAQA,MAAM,QAAO,eAAe;AACpC,SAGEC,MAAM,QAED,iBAAiB;AACxB,SAAQC,UAAU,EAAEC,EAAE,QAAO,MAAM;AACnC,SAASC,GAAG,QAAQ,gBAAgB;AACpC,SAASC,UAAU,QAAQ,eAAe;AAE1C,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAA6B,EAAEC,KAA0B,KAAI;EACpG,MAAMC,YAAY,GAAGT,MAAM,CAACK,UAAU,CAAC;EACvC,MAAMK,MAAM,GAAGV,MAAM,CAACC,MAAM,CAAC;EAE7B,OAAOQ,YAAY,CAACE,UAAU,EAAE,CAACC,IAAI,CACnCR,GAAG,CAACS,QAAQ,IAAIA,QAAQ,GAAG,IAAI,GAAGH,MAAM,CAACI,aAAa,CAAC,CAACJ,MAAM,CAACK,QAAQ,CAACC,SAAS,CAACC,WAAW,CAAC,CAAC,EAAE;IAC/FC,WAAW,EAAE;MAAEC,SAAS,EAAE,IAAI;MAAEC,OAAO,EAAEZ,KAAK,CAACa;IAAG;GACnD,CAAE,CAAC,EACJnB,UAAU,CAAEoB,GAAG,IAAI;IACjBZ,MAAM,CAACa,QAAQ,CAAC,CAACP,SAAS,CAACC,WAAW,CAAC,EAAE;MACvCC,WAAW,EAAE;QAAEC,SAAS,EAAE,IAAI;QAAEC,OAAO,EAAEZ,KAAK,CAACa;MAAG;KACnD,CAAC;IACF,OAAOlB,EAAE,CAAC,KAAK,CAAC;EAClB,CAAC,CAAC,CACH;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}