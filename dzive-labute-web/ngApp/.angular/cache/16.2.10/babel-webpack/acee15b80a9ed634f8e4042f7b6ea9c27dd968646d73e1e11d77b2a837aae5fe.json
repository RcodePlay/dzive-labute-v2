{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(apiService, router) {\n    this.apiService = apiService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    if (this.apiService.isAuthenticatedUser()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","apiService","router","canActivate","next","state","isAuthenticatedUser","navigate","_","i0","ɵɵinject","i1","ApiService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Radoslav\\Desktop\\projects\\dzive-labute-v2\\dzive-labute-web\\ngApp\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private apiService: ApiService, private router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    if (this.apiService.isAuthenticatedUser()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}"],"mappings":";;;AAOA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,UAAsB,EAAUC,MAAc;IAA9C,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAEtEC,WAAWA,CACTC,IAA4B,EAC5BC,KAA0B;IAC1B,IAAI,IAAI,CAACJ,UAAU,CAACK,mBAAmB,EAAE,EAAE;MACzC,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;EAAC,QAAAC,CAAA,G;qBAbUT,SAAS,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAThB,SAAS;IAAAiB,OAAA,EAATjB,SAAS,CAAAkB,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}