{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CookiesService {\n  constructor() {}\n  getCookieConsent() {\n    return this.getCookie('cookieConsent') === 'true';\n  }\n  setCookieConsent(value, days) {\n    this.setCookie('cookieConsent', value.toString(), days);\n  }\n  setCookie(name, value, days) {\n    let expires = \"\";\n    if (days) {\n      let date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n  }\n  getCookie(name) {\n    let nameEQ = name + \"=\";\n    let ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  }\n  static #_ = this.ɵfac = function CookiesService_Factory(t) {\n    return new (t || CookiesService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CookiesService,\n    factory: CookiesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CookiesService","constructor","getCookieConsent","getCookie","setCookieConsent","value","days","setCookie","toString","name","expires","date","Date","setTime","getTime","toUTCString","document","cookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Radoslav\\Desktop\\projects\\dzive-labute-v2\\dzive-labute-web\\ngApp\\src\\app\\services\\cookies\\cookies.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookiesService {\n\n  constructor() { }\n\n  getCookieConsent(): boolean {\n    return this.getCookie('cookieConsent') === 'true';\n  }\n\n  setCookieConsent(value: boolean, days: number) {\n    this.setCookie('cookieConsent', value.toString(), days);\n  }\n\n  private setCookie(name: string, value: string, days: number) {\n    let expires = \"\";\n    if (days) {\n      let date = new Date();\n      date.setTime(date.getTime() + (days*24*60*60*1000));\n      expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n  }\n\n  private getCookie(name: string) {\n    let nameEQ = name + \"=\";\n    let ca = document.cookie.split(';');\n    for(let i=0;i < ca.length;i++) {\n      let c = ca[i];\n      while (c.charAt(0)==' ') c = c.substring(1,c.length);\n      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,cAAc;EAEzBC,YAAA,GAAgB;EAEhBC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACC,SAAS,CAAC,eAAe,CAAC,KAAK,MAAM;EACnD;EAEAC,gBAAgBA,CAACC,KAAc,EAAEC,IAAY;IAC3C,IAAI,CAACC,SAAS,CAAC,eAAe,EAAEF,KAAK,CAACG,QAAQ,EAAE,EAAEF,IAAI,CAAC;EACzD;EAEQC,SAASA,CAACE,IAAY,EAAEJ,KAAa,EAAEC,IAAY;IACzD,IAAII,OAAO,GAAG,EAAE;IAChB,IAAIJ,IAAI,EAAE;MACR,IAAIK,IAAI,GAAG,IAAIC,IAAI,EAAE;MACrBD,IAAI,CAACE,OAAO,CAACF,IAAI,CAACG,OAAO,EAAE,GAAIR,IAAI,GAAC,EAAE,GAAC,EAAE,GAAC,EAAE,GAAC,IAAK,CAAC;MACnDI,OAAO,GAAG,YAAY,GAAGC,IAAI,CAACI,WAAW,EAAE;;IAE7CC,QAAQ,CAACC,MAAM,GAAGR,IAAI,GAAG,GAAG,IAAIJ,KAAK,IAAI,EAAE,CAAC,GAAIK,OAAO,GAAG,UAAU;EACtE;EAEQP,SAASA,CAACM,IAAY;IAC5B,IAAIS,MAAM,GAAGT,IAAI,GAAG,GAAG;IACvB,IAAIU,EAAE,GAAGH,QAAQ,CAACC,MAAM,CAACG,KAAK,CAAC,GAAG,CAAC;IACnC,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAAGF,EAAE,CAACG,MAAM,EAACD,CAAC,EAAE,EAAE;MAC7B,IAAIE,CAAC,GAAGJ,EAAE,CAACE,CAAC,CAAC;MACb,OAAOE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,IAAE,GAAG,EAAED,CAAC,GAAGA,CAAC,CAACE,SAAS,CAAC,CAAC,EAACF,CAAC,CAACD,MAAM,CAAC;MACpD,IAAIC,CAAC,CAACG,OAAO,CAACR,MAAM,CAAC,IAAI,CAAC,EAAE,OAAOK,CAAC,CAACE,SAAS,CAACP,MAAM,CAACI,MAAM,EAACC,CAAC,CAACD,MAAM,CAAC;;IAExE,OAAO,IAAI;EACb;EAAC,QAAAK,CAAA,G;qBA/BU3B,cAAc;EAAA;EAAA,QAAA4B,EAAA,G;WAAd5B,cAAc;IAAA6B,OAAA,EAAd7B,cAAc,CAAA8B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}